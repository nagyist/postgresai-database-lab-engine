.only_cf_branch: &only_cf_branch
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - cloudformation/*

.only_cf_tag_rc: &only_cf_rc
  rules:
    - if: $CI_COMMIT_TAG =~ /^cf\/[0-9.]+[\-_]*[a-zA-Z]+[a-zA-Z0-9.\-_]*[a-zA-Z0-9]+$/

.only_cf_release: &only_cf_release
  rules:
    - if: $CI_COMMIT_TAG =~ /^cf\/[0-9.]+$/

### Build jobs.
build_ami_branch:
  <<: *only_cf_branch
  stage: build
  image: ubuntu:20.04
  before_script:
    - export CI_COMMIT_TAG="cf/3.1.2-rc.0"
    - export DLE_VERSION=$(echo ${CI_COMMIT_TAG#"cf/"})
    - export AWS_DEFAULT_REGION="us-east-1"

  script:
    - apt-get update -y && apt-get install -y curl jq unzip gnupg2 lsb-release software-properties-common
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64
    - add-apt-repository ppa:rmescandon/yq
    - apt-get update && apt-get install packer yq

    - export PKR_VAR_dle_version="v${DLE_VERSION}"
    - export PKR_VAR_ami_name_prefix="DBLABserver"
    # - packer build packer/template.json.pkr.hcl

    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install

    - cd cloudformation
    - export DLE_CF_TEMPLATE_FILE="output/dle_cf-${DLE_VERSION}.yaml"
    - sed -e "s|\$DLE_DOCKER_IMAGE_VERSION|$DLE_VERSION|" dle_cf_template.yaml > ${DLE_CF_TEMPLATE_FILE}
    - bash getAMIs.sh

    - export PACKAGE_NAME="cf"
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${DLE_CF_TEMPLATE_FILE} "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${DLE_VERSION}/dle_cf.yaml"'

  artifacts:
    paths:
      - cloudformation/output

build_ami_rc:
  <<: *only_cf_rc
  stage: build
  script:
    - cd cloudformation
    - echo "Build AMI RC"

build_ami_release:
  <<: *only_cf_release
  stage: build
  script:
    - cd cloudformation
    - echo "Build AMI"
